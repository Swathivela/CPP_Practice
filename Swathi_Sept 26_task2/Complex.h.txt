// Complex.h
// Complex class definition with operator overloading for I/O, multiplication, and comparison
#ifndef COMPLEX_H
#define COMPLEX_H

#include <iostream>
using namespace std;

class Complex
{
    friend ostream &operator<<(ostream &, const Complex &);
    friend istream &operator>>(istream &, Complex &);

public:
    // constructor
    Complex(double = 0.0, double = 0.0);

    // addition and subtraction
    Complex operator+(const Complex &) const;
    Complex operator-(const Complex &) const;

    // multiplication
    Complex operator*(const Complex &) const;

    // comparison
    bool operator==(const Complex &) const;
    bool operator!=(const Complex &) const;

private:
    double real;      // real part
    double imaginary; // imaginary part
};

#endif
